"""Gallery type"""
type Gallery {
  id: ID!
  checksum: String!
  path: String
  title: String
  url: String
  date: String
  details: String
  rating: Int
  organized: Boolean!
  created_at: Time!
  updated_at: Time!
  file_mod_time: Time

  scenes: [Scene!]!
  studio: Studio
  image_count: Int!
  tags: [Tag!]!
  performers: [Performer!]!

  """The images in the gallery"""
  images: [Image!]! # Resolver
  cover: Image
}

type GalleryFilesType {
  index: Int!
  name: String
  path: String
}

input GalleryCreateInput {
  title: String!
  url: String
  date: String
  details: String
  rating: Int
  organized: Boolean
  scene_ids: [ID!]
  studio_id: ID
  tag_ids: [ID!]
  performer_ids: [ID!]
}

input GalleryUpdateInput {
  clientMutationId: String
  id: ID!
  title: String
  url: String
  date: String
  details: String
  rating: Int
  organized: Boolean
  scene_ids: [ID!]
  studio_id: ID
  tag_ids: [ID!]
  performer_ids: [ID!]
}

input BulkGalleryUpdateInput {
  clientMutationId: String
  ids: [ID!]
  url: String
  date: String
  details: String
  rating: Int
  organized: Boolean
  scene_ids: BulkUpdateIds
  studio_id: ID
  tag_ids: BulkUpdateIds
  performer_ids: BulkUpdateIds
}

input GalleryDestroyInput {
  ids: [ID!]!
  """
  If true, then the zip file will be deleted if the gallery is zip-file-based. 
  If gallery is folder-based, then any files not associated with other
  galleries will be deleted, along with the folder, if it is not empty.
  """
  delete_file: Boolean
  delete_generated: Boolean
}

type FindGalleriesResultType {
  count: Int!
  galleries: [Gallery!]!
}

input GalleryAddInput {
  gallery_id: ID!
  image_ids: [ID!]!
}

input GalleryRemoveInput {
  gallery_id: ID!
  image_ids: [ID!]!
}
